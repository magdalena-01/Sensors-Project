// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SensorsProject.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240720122542_M1")]
    partial class M1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SensorsProject.Models.Sensor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SensorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SensorType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.ToTable("Sensors");

                    b.HasDiscriminator<string>("SensorType").HasValue("Sensor");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SensorsProject.Models.TempSensor", b =>
                {
                    b.HasBaseType("SensorsProject.Models.Sensor");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Temp");
                });

            modelBuilder.Entity("SensorsProject.Models.DataModels.TempData", b =>
                {
                    b.HasBaseType("SensorsProject.Models.TempSensor");

                    b.Property<double>("Temp")
                        .HasColumnType("float");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("TempData");
                });

            modelBuilder.Entity("SensorsProject.Models.DataModels.TempData", b =>
                {
                    b.HasOne("SensorsProject.Models.TempSensor", null)
                        .WithOne("TempData")
                        .HasForeignKey("SensorsProject.Models.DataModels.TempData", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SensorsProject.Models.TempSensor", b =>
                {
                    b.Navigation("TempData");
                });
#pragma warning restore 612, 618
        }
    }
}
